<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dayan.eve.repository.AccountRepository">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT
        INTO
            eve_account
            (
                account_qq_id,
                account_baidu_id,
                hash_id,
                nickname,
                password,
                mobile,
                gmt_create
            )
        VALUES
            (
                #{accountQQId},
                #{accountBaiduId},
                #{hashId},
                #{nickname},
                #{password},
                #{mobile},
                NOW()
            )
    </insert>

    <update id="delete">
        UPDATE
            eve_account
        SET
            is_deleted = 1,
            gmt_modify = NOW()
        WHERE
            id = #{id}
    </update>

    <delete id="deletePermanently">
        DELETE FROM eve_account
        WHERE id = #{id}
    </delete>

    <update id="update" >
        UPDATE
        eve_account
        SET
        <if test="accountQQId != null">
            account_qq_id = #{accountQQId},
        </if>
        <if test="accountBaiduId != null">
            account_baidu_id = #{accountBaiduId},
        </if>
        <if test="nickname != null  and nickname != ''">
            nickname = #{nickname},
        </if>
        <if test="hashId != null ">
            hash_id = #{hashId},
        </if>
        gmt_modify = NOW()
        WHERE
        id = #{id}

    </update>

    <sql id="where">
        <if test="deleted != null">
            AND a.is_deleted = #{deleted}
        </if>
        <if test="mobile != null">
            AND a.is_verified = 1
            AND a.mobile = #{mobile}
        </if>
        <if test="accountBaiduId != null">
            AND a.account_baidu_id = #{accountBaiduId}
        </if>
        <if test="accountQQId != null">
            AND a.account_qq_id = #{accountQQId}
        </if>
        <if test="id != null">
            AND a.id = #{id}
        </if>
        <if test="accountHashId != null">
            AND a.hash_id = #{accountHashId}
        </if>
        <if test="isVerified != null">
            AND a.is_verified = 1
        </if>
    </sql>


    <select id="count" resultType="int">
        SELECT
        COUNT(*)
        FROM
        eve_account a
        WHERE 1 = 1
        <include refid="where"/>
    </select>

    <select id="query" resultType="dayan.eve.model.account.Account">
        SELECT
        a.id,
        a.account_qq_id "accountQQId",
        a.account_baidu_id "accountBaiduId",
        a.nickname,
        a.password,
        a.mobile,
        a.hash_id hashId,
        a.login_times "loginTimes"
        FROM
        eve_account a
        WHERE 1 = 1
        <include refid="where"/>
    </select>
    <select id="queryIds" resultType="Integer">
        SELECT a.id
        FROM
            eve_account a
        WHERE 1 = 1
    </select>

    <select id="queryVerified" resultType="dayan.eve.model.account.AuthCode">
        SELECT
            a.is_verified "isVerified",
            a.verify_date "verifyDate"
        FROM
            eve_account a
        WHERE
            a.mobile = #{mobile}
    </select>

    <select id="queryVerifyCode" resultType="dayan.eve.model.account.Account">
        SELECT
            a.id,
            a.verify_code "verifyCode"
        FROM
            eve_account a
        WHERE
            a.mobile = #{mobile}
    </select>

    <insert id="insertVerify" >
        INSERT
        INTO
            eve_account
            (
                mobile,
                verify_code,
                verify_date
            )
        VALUES
            (
                #{mobile},
                #{verifyCode},
                NOW()
            )
    </insert>

    <update id="updateVerifyCode" >
        UPDATE
            eve_account a
        SET
            a.verify_code = #{verifyCode},
            a.verify_date = NOW()
        WHERE
            a.mobile = #{mobile}
    </update>

    <update id="updateIsVerified" >
        UPDATE
            eve_account a
        SET
            a.is_verified = 1
        WHERE
            a.id = #{id}
    </update>

    <update id="updateAccount" >
        UPDATE
            eve_account a
        SET
            a.nickname   = #{nickname},
            a.password   = #{password},
            a.gmt_create = NOW()
        WHERE
            mobile = #{mobile}
    </update>

    <update id="updatePassword">
        UPDATE
            eve_account a
        SET
            a.password   = #{password},
            a.gmt_modify = NOW()
        WHERE
            mobile = #{mobile}
    </update>

    <select id="queryIdByMobile" resultType="Integer">
        SELECT a.id
        FROM
            eve_account a
        WHERE
            mobile = #{mobile}
    </select>

    <update id="updateBlock" >
        UPDATE
            eve_account a
        SET
            a.is_block   = #{blocked},
            a.gmt_modify = NOW()
        WHERE
            id = #{id}
    </update>

    <select id="queryAccountByHashId" resultType="dayan.eve.model.account.Account">
        SELECT
            id,
            nickname
        FROM
            eve_account
        WHERE
            hash_id = #{hashId}
    </select>

    <select id="queryHashId" resultType="String">
        SELECT hash_id
        FROM
            eve_account
        WHERE
            id = #{id}
    </select>

    <select id="queryAccountEves" resultType="dayan.eve.model.account.Account">
        SELECT
            id,
            mobile,
            password,
            nickname
        FROM
            eve_account
        WHERE
            is_verified = 1
            AND account_baidu_id IS NULL
            AND account_qq_id IS NULL
            AND mobile IS NOT NULL
            AND hash_id IS NULL
            AND is_deleted = 0
    </select>
    <select id="queryById" resultType="dayan.eve.model.account.Account"></select>

    <insert id="multiInsertHashId" >
        INSERT INTO eve_account_hash_id (
        account_id,
        hash_id ,
        gmt_create
        ) VALUES
        <foreach collection="list" item="account" index="index" separator=",">
            (
            #{account.id},
            #{account.hashId},
            NOW()
            )
        </foreach>
    </insert>

    <update id="updateHashId">
        UPDATE
                eve_account a, eve_account_hash_id b
        SET
            a.hash_id = b.hash_id
        WHERE
            a.id = b.account_id
    </update>
</mapper>